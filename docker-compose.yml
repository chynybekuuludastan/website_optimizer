version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: website-analyzer-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: website_analyzer
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: website-analyzer-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Uncomment this section if you want to containerize the Go application too
  # app:
  #   build: .
  #   container_name: website-analyzer-app
  #   restart: unless-stopped
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     PORT: 8080
  #     POSTGRES_URI: postgres://postgres:postgres@postgres:5432/website_analyzer?sslmode=disable
  #     REDIS_URI: redis://redis:6379/0
  #     JWT_SECRET: your-secret-key
  #     OPENAI_API_KEY: your-openai-api-key
  #   ports:
  #     - "8080:8080"

volumes:
  postgres_data:
  redis_data:
